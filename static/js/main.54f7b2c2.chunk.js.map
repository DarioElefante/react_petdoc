{"version":3,"sources":["components/AddAppointments.js","components/ListAppointments.js","components/SearchAppointments.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddAppointments","props","useState","petName","ownerName","aptDate","aptTime","aptNotes","formData","setForm","handleChange","e","target","name","value","prevData","className","formDisplay","onClick","toggleDisplay","id","onSubmit","preventDefault","tempApt","addAppointment","noValidate","htmlFor","readOnly","type","placeholder","onChange","rows","cols","ListAppointments","appointments","map","item","deleteApt","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","aptId","date","parse","format","SearchAppointments","aria-label","search","data-toggle","aria-haspopup","aria-expanded","orderdBy","changeOrder","orderDir","href","role","App","order","data","setData","setDisplay","setOrder","setDir","query","setQuery","useEffect","fetch","then","response","json","i","console","log","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","dir","apt","tempApts","unshift","without","findIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54f7b2c2.chunk.js","sourcesContent":["import \"../css/App.css\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useState } from \"react\";\n\nfunction AddAppointments(props) {\n  const [formData, setForm] = useState({\n    petName: \"\",\n    ownerName: \"\",\n    aptDate: \"\",\n    aptTime: \"\",\n    aptNotes: \"\",\n  });\n\n  function handleAdd(e) {\n    e.preventDefault();\n\n    let tempApt = {\n      petName: formData.petName,\n      ownerName: formData.ownerName,\n      aptDate: formData.aptDate + \" \" + formData.aptTime,\n      aptNotes: formData.aptNotes,\n    };\n    props.addAppointment(tempApt);\n\n    setForm({\n      petName: \"\",\n      ownerName: \"\",\n      aptDate: \"\",\n      aptTime: \"\",\n      aptNotes: \"\",\n    });\n    props.toggleDisplay();\n  }\n\n  const handleChange = (e) => {\n    let target = e.target;\n    let name = target.name;\n    let value = target.value;\n    setForm((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div\n      className={\n        \"card textcenter mt-3 \" + (props.formDisplay ? \"\" : \"add-appointment\")\n      }\n    >\n      <div\n        onClick={props.toggleDisplay}\n        className=\"apt-addheading card-header bg-primary text-white\"\n      >\n        <FaPlus /> Add Appointment\n      </div>\n\n      <div className=\"card-body\">\n        <form id=\"aptForm\" onSubmit={handleAdd} noValidate>\n          <div className=\"form-group form-row\">\n            <label\n              className=\"col-md-2 col-form-label text-md-right\"\n              htmlFor=\"petName\"\n              readOnly\n            >\n              Pet Name\n            </label>\n            <div className=\"col-md-10\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"petName\"\n                placeholder=\"Pet's Name\"\n                value={formData.petName}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group form-row\">\n            <label\n              className=\"col-md-2 col-form-label text-md-right\"\n              htmlFor=\"ownerName\"\n            >\n              Pet Owner\n            </label>\n            <div className=\"col-md-10\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"ownerName\"\n                placeholder=\"Owner's Name\"\n                value={formData.ownerName}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group form-row\">\n            <label\n              className=\"col-md-2 col-form-label text-md-right\"\n              htmlFor=\"aptDate\"\n            >\n              Date\n            </label>\n            <div className=\"col-md-4\">\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                name=\"aptDate\"\n                id=\"aptDate\"\n                value={formData.aptDate}\n                onChange={handleChange}\n              />\n            </div>\n            <label\n              className=\"col-md-2 col-form-label text-md-right\"\n              htmlFor=\"aptTime\"\n            >\n              Time\n            </label>\n            <div className=\"col-md-4\">\n              <input\n                type=\"time\"\n                className=\"form-control\"\n                name=\"aptTime\"\n                id=\"aptTime\"\n                value={formData.aptTime}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group form-row\">\n            <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n              Apt. Notes\n            </label>\n            <div className=\"col-md-10\">\n              <textarea\n                className=\"form-control\"\n                rows=\"4\"\n                cols=\"50\"\n                name=\"aptNotes\"\n                id=\"aptNotes\"\n                placeholder=\"Appointment Notes\"\n                value={formData.aptNotes}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group form-row mb-0\">\n            <div className=\"offset-md-2 col-md-10\">\n              <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\">\n                Add Appointment\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default AddAppointments;\n","import \"../css/App.css\";\nimport { FaTimes } from \"react-icons/fa\";\nimport Moment from \"react-moment\";\n\nfunction ListAppointments(props) {\n  //props non servirebbe dato che da app mi sto passando un solo dato, ma se i vari components avessero differenti dati passati nel routing,   allora dovrei utilizzare props.nomeValoreDatoinAPp per poter accedere ai dati che mi interessano\n\n  return (\n    <div className=\"appointment-list item-list mb-3\">\n      {props.appointments.map((item) => (\n        <div key={item.aptId} className=\"pet-item col media py-3\">\n          <div className=\"mr-3\">\n            <button\n              className=\"pet-delete btn btn-sm btn-danger\"\n              onClick={() => props.deleteApt(item)}\n            >\n              <FaTimes />\n            </button>\n          </div>\n\n          <div className=\"pet-info media-body\">\n            <div className=\"pet-head d-flex\">\n              <span\n                className=\"pet-name\"\n                contentEditable\n                suppressContentEditableWarning\n                onBlur={(e) =>\n                  props.updateInfo(\"petName\", e.target.innerText, item.aptId)\n                }\n              >\n                {item.petName}\n              </span>\n              <span className=\"apt-date ml-auto\">\n                <Moment\n                  date={item.aptDate}\n                  parse=\"YYYY-MM-DD hh:mm\"\n                  format=\"D MMM YYYY HH:mm\"\n                />\n              </span>\n            </div>\n\n            <div className=\"owner-name\">\n              <span className=\"label-item\">Owner: </span>\n              <span\n                contentEditable\n                suppressContentEditableWarning\n                onBlur={(e) =>\n                  props.updateInfo(\"ownerName\", e.target.innerText, item.aptId)\n                }\n              >\n                {item.ownerName}\n              </span>\n            </div>\n            <div\n              className=\"apt-notes\"\n              contentEditable\n              suppressContentEditableWarning\n              onBlur={(e) =>\n                props.updateInfo(\"aptNote\", e.target.innerText, item.aptId)\n              }\n            >\n              {item.aptNotes}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default ListAppointments;\n","import \"../css/App.css\";\n\nfunction SearchAppointments(props) {\n  return (\n    <div className=\"search-appointments row justify-content-center my-4\">\n      <div className=\"col-md-6\">\n        <div className=\"input-group\">\n          <input\n            id=\"SearchApts\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Search Appointments\"\n            onChange={(e) => props.search(e.target.value)}\n          />\n          <div className=\"input-group-append\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary dropdown-toggle\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Sort by: <span className=\"caret\" />\n            </button>\n\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n              <button\n                className={`sort-by dropdown-item ${\n                  props.orderdBy === \"petName\" ? \"active\" : \"\"\n                }`}\n                onClick={(e) => props.changeOrder(\"petName\", props.orderDir)}\n                href=\"#\"\n              >\n                Pet Name\n              </button>\n              <button\n                className={`sort-by dropdown-item ${\n                  props.orderdBy === \"aptDate\" ? \"active\" : \"\"\n                }`}\n                href=\"#\"\n                onClick={(e) => props.changeOrder(\"aptDate\", props.orderDir)}\n              >\n                Date\n              </button>\n              <button\n                className={`sort-by dropdown-item ${\n                  props.orderdBy === \"ownerName\" ? \"active\" : \"\"\n                }`}\n                onClick={(e) => props.changeOrder(\"ownerName\", props.orderDir)}\n                href=\"#\"\n              >\n                Owner\n              </button>\n              <div role=\"separator\" className=\"dropdown-divider\" />\n              <button\n                className={`sort-by dropdown-item ${\n                  props.orderDir === \"asc\" ? \"active\" : \"\"\n                }`}\n                onClick={(e) => props.changeOrder(props.orderdBy, \"asc\")}\n                href=\"#\"\n              >\n                Asc\n              </button>\n              <button\n                className={`sort-by dropdown-item ${\n                  props.orderDir === \"desc\" ? \"active\" : \"\"\n                }`}\n                onClick={(e) => props.changeOrder(props.orderdBy, \"desc\")}\n                href=\"#\"\n              >\n                Desc\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default SearchAppointments;\n","import { useEffect, useState } from \"react\";\nimport \"../css/App.css\";\nimport AddAppointments from \"./AddAppointments\";\nimport ListAppointments from \"./ListAppointments\";\nimport SearchAppointments from \"./SearchAppointments\";\nimport { without, findIndex } from \"lodash\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [formDisplay, setDisplay] = useState(false);\n  const [orderdBy, setOrder] = useState(\"ownerName\");\n  const [orderDir, setDir] = useState(\"desc\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"./data.json\")\n      .then((response) => response.json())\n      .then((data) =>\n        setData(\n          data.map((item, i) => {\n            return (item = { ...item, aptId: i });\n          })\n        )\n      );\n  }, []);\n  console.log(data);\n  const toggleDisplay = () => {\n    setDisplay(!formDisplay);\n  };\n\n  const deleteApt = (apt) => {\n    let tempApts = data;\n    tempApts = without(tempApts, apt);\n    setData(tempApts);\n  };\n\n  const addAppointment = (apt) => {\n    let tempApts = data;\n    tempApts.unshift(apt);\n    setData(tempApts);\n  };\n  if (!data) return null;\n\n  let order;\n  let filteredApts = data;\n  if (orderDir === \"asc\") {\n    order = 1;\n  } else {\n    order = -1;\n  }\n\n  filteredApts = filteredApts\n    .sort((a, b) => {\n      if (a[orderdBy].toLowerCase() < b[orderdBy].toLowerCase()) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    })\n    .filter((eachItem) => {\n      return (\n        eachItem.petName.toLowerCase().includes(query.toLowerCase()) ||\n        eachItem.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        eachItem.aptNotes.toLowerCase().includes(query.toLowerCase())\n      );\n    });\n\n  const changeOrder = (order, dir) => {\n    setOrder(order);\n    setDir(dir);\n  };\n\n  const search = (query) => {\n    setQuery(query);\n  };\n\n  const updateInfo = (name, value, id) => {\n    let tempApts = data;\n    let aptIndex = findIndex(data, { aptId: id });\n    tempApts[aptIndex][name] = value;\n    setData(tempApts);\n  };\n\n  return (\n    <main className=\"page bg-white\" id=\"petratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 bg-white\">\n            <div className=\"container\">\n              <SearchAppointments\n                changeOrder={changeOrder}\n                orderdBy={orderdBy}\n                orderDir={orderDir}\n                search={search}\n              />\n              <AddAppointments\n                formDisplay={formDisplay}\n                toggleDisplay={toggleDisplay}\n                addAppointment={addAppointment}\n              />\n              <ListAppointments\n                appointments={filteredApts}\n                deleteApt={deleteApt}\n                updateInfo={updateInfo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'jquery/dist/jquery.js'\nimport 'popper.js/dist/umd/popper.js'\nimport 'bootstrap/dist/js/bootstrap'\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}